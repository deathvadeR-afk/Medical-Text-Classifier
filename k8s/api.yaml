apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: medtext
  labels:
    app: medical-text-classification
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: medical-text-classification
      component: api
  template:
    metadata:
      labels:
        app: medical-text-classification
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      imagePullSecrets:
      - name: registry-secret
      containers:
      - name: api
        image: your-registry.com/medtext-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: ENVIRONMENT
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: DEBUG
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: LOG_LEVEL
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: medtext-secrets
              key: POSTGRES_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: medtext-secrets
              key: SECRET_KEY
        - name: REQUIRE_API_KEY
          value: "true"
        - name: API_KEYS
          valueFrom:
            secretKeyRef:
              name: medtext-secrets
              key: API_KEYS
        - name: RATE_LIMIT_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: RATE_LIMIT_REQUESTS
        - name: RATE_LIMIT_WINDOW
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: RATE_LIMIT_WINDOW
        - name: ALLOWED_ORIGINS
          valueFrom:
            secretKeyRef:
              name: medtext-secrets
              key: ALLOWED_ORIGINS
        - name: ALLOWED_HOSTS
          valueFrom:
            secretKeyRef:
              name: medtext-secrets
              key: ALLOWED_HOSTS
        - name: ENABLE_SECURITY_HEADERS
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: ENABLE_SECURITY_HEADERS
        - name: MAX_TEXT_LENGTH
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: MAX_TEXT_LENGTH
        - name: MIN_TEXT_LENGTH
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: MIN_TEXT_LENGTH
        - name: LOG_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: LOG_REQUESTS
        - name: LOG_SENSITIVE_DATA
          valueFrom:
            configMapKeyRef:
              name: medtext-config
              key: LOG_SENSITIVE_DATA
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: medtext
  labels:
    app: medical-text-classification
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: medical-text-classification
    component: api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: medtext
  labels:
    app: medical-text-classification
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

apiVersion: v1
kind: Secret
metadata:
  name: medtext-secrets
  namespace: medtext
  labels:
    app: medical-text-classification
    component: secrets
type: Opaque
stringData:
  # Database credentials
  POSTGRES_PASSWORD: "CHANGE_ME_STRONG_PASSWORD_HERE"
  
  # JWT Secret Key
  SECRET_KEY: "CHANGE_ME_SUPER_SECRET_JWT_KEY_HERE_64_CHARS_MINIMUM"
  
  # API Keys
  API_KEYS: "prod-api-key-1,prod-api-key-2,prod-api-key-3"
  
  # CORS and Host Configuration
  ALLOWED_ORIGINS: "https://yourdomain.com,https://www.yourdomain.com"
  ALLOWED_HOSTS: "yourdomain.com,api.yourdomain.com,www.yourdomain.com"
  
  # Frontend Configuration
  REACT_APP_API_URL: "https://api.yourdomain.com"
  
  # Monitoring
  GRAFANA_ADMIN_PASSWORD: "CHANGE_ME_GRAFANA_ADMIN_PASSWORD"
  GRAFANA_ROOT_URL: "https://monitoring.yourdomain.com"
  
  # Email Alerts
  SMTP_HOST: "smtp.yourdomain.com"
  SMTP_PORT: "587"
  SMTP_USER: "alerts@yourdomain.com"
  SMTP_PASSWORD: "CHANGE_ME_SMTP_PASSWORD"
  ALERT_EMAIL_TO: "admin@yourdomain.com"
  
  # Slack Alerts (optional)
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: medtext
  labels:
    app: medical-text-classification
    component: registry
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "your-registry.com": {
          "username": "your-username",
          "password": "your-password",
          "auth": "base64-encoded-username:password"
        }
      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: medtext
  labels:
    app: medical-text-classification
    component: tls
type: kubernetes.io/tls
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    # Your SSL certificate here
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    # Your private key here
    -----END PRIVATE KEY-----

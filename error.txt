Run python -m pytest tests/integration --cov=src --cov-report=xml --cov-report=html
============================= test session starts ==============================
platform linux -- Python 3.9.23, pytest-8.4.2, pluggy-1.6.0
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /home/runner/work/Medical-Text-Classifier/Medical-Text-Classifier
configfile: pytest.ini
plugins: anyio-4.11.0, html-4.1.1, timeout-2.4.0, asyncio-1.2.0, env-1.1.5, Faker-37.11.0, benchmark-5.1.0, cov-7.0.0, json-report-1.5.0, xdist-3.8.0, mock-3.15.1, metadata-3.1.1, postgresql-7.0.2
asyncio: mode=strict, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 17 items

tests/integration/test_api.py ..FF....FFF..FF..                          [100%]

=================================== FAILURES ===================================
_________________ TestPredictionEndpoint.test_predict_success __________________

self = <tests.integration.test_api.TestPredictionEndpoint object at 0x7f515373f220>
integration_client = <starlette.testclient.TestClient object at 0x7f515368f520>
sample_medical_texts = [{'expected_category': 'Metabolic & Endocrine Disorders', 'text': 'What are the symptoms of diabetes?'}, {'expected_ca... disease"}, {'expected_category': 'Other Age-Related & Immune Disorders', 'text': 'How to manage arthritis symptoms?'}]

    @pytest.mark.integration
    def test_predict_success(self, integration_client, sample_medical_texts):
        """Test successful prediction."""
        test_case = sample_medical_texts[0]  # Diabetes text
    
        response = integration_client.post(
            "/predict",
            json={"text": test_case["text"]}
        )
    
>       assert response.status_code == 200
E       assert 503 == 200
E        +  where 503 = <Response [503 Service Unavailable]>.status_code

tests/integration/test_api.py:59: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:16,934 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:16,934 - src.api.inference - INFO - Model not found, using rule-based classification as fallback
2025-10-23 03:15:16,934 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:16,934 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.inference:inference.py:131 Model not found, using rule-based classification as fallback
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:16,936 - src.api.middleware - INFO - Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:16.936638+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '45', 'content-type': 'application/json'}}
2025-10-23 03:15:16,941 - src.api.middleware - INFO - Response: status=503, duration=0.005s
2025-10-23 03:15:16,943 - httpx - INFO - HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
------------------------------ Captured log call -------------------------------
INFO     src.api.middleware:middleware.py:170 Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:16.936638+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '45', 'content-type': 'application/json'}}
INFO     src.api.middleware:middleware.py:179 Response: status=503, duration=0.005s
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,040 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
_____________ TestPredictionEndpoint.test_predict_all_sample_texts _____________

self = <tests.integration.test_api.TestPredictionEndpoint object at 0x7f515373f730>
integration_client = <starlette.testclient.TestClient object at 0x7f51536ea490>
sample_medical_texts = [{'expected_category': 'Metabolic & Endocrine Disorders', 'text': 'What are the symptoms of diabetes?'}, {'expected_ca... disease"}, {'expected_category': 'Other Age-Related & Immune Disorders', 'text': 'How to manage arthritis symptoms?'}]

    @pytest.mark.integration
    def test_predict_all_sample_texts(self, integration_client, sample_medical_texts):
        """Test prediction for all sample medical texts."""
        for test_case in sample_medical_texts:
            response = integration_client.post(
                "/predict",
                json={"text": test_case["text"]}
            )
    
>           assert response.status_code == 200
E           assert 503 == 200
E            +  where 503 = <Response [503 Service Unavailable]>.status_code

tests/integration/test_api.py:86: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:17,044 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:17,044 - src.api.inference - INFO - Model not found, using rule-based classification as fallback
2025-10-23 03:15:17,044 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:17,044 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.inference:inference.py:131 Model not found, using rule-based classification as fallback
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:17,047 - src.api.middleware - INFO - Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.047227+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '45', 'content-type': 'application/json'}}
2025-10-23 03:15:17,050 - src.api.middleware - INFO - Response: status=503, duration=0.003s
2025-10-23 03:15:17,051 - httpx - INFO - HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
------------------------------ Captured log call -------------------------------
INFO     src.api.middleware:middleware.py:170 Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.047227+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '45', 'content-type': 'application/json'}}
INFO     src.api.middleware:middleware.py:179 Response: status=503, duration=0.003s
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,058 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
_______________ TestPredictionEndpoint.test_predict_unicode_text _______________

self = <tests.integration.test_api.TestPredictionEndpoint object at 0x7f515374bfd0>
integration_client = <starlette.testclient.TestClient object at 0x7f51534e64c0>

    @pytest.mark.integration
    def test_predict_unicode_text(self, integration_client):
        """Test prediction with unicode text."""
        unicode_text = "¿Cuáles son los síntomas de la diabetes? 糖尿病の症状は何ですか？"
    
        response = integration_client.post(
            "/predict",
            json={"text": unicode_text}
        )
    
>       assert response.status_code == 200
E       assert 503 == 200
E        +  where 503 = <Response [503 Service Unavailable]>.status_code

tests/integration/test_api.py:167: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:17,105 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:17,105 - src.api.inference - INFO - Model not found, using rule-based classification as fallback
2025-10-23 03:15:17,105 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:17,105 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.inference:inference.py:131 Model not found, using rule-based classification as fallback
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:17,107 - src.api.middleware - INFO - Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.107633+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '91', 'content-type': 'application/json'}}
2025-10-23 03:15:17,110 - src.api.middleware - INFO - Response: status=503, duration=0.003s
2025-10-23 03:15:17,111 - httpx - INFO - HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
------------------------------ Captured log call -------------------------------
INFO     src.api.middleware:middleware.py:170 Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.107633+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '91', 'content-type': 'application/json'}}
INFO     src.api.middleware:middleware.py:179 Response: status=503, duration=0.003s
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,119 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
_____________ TestPredictionEndpoint.test_predict_whitespace_text ______________

self = <tests.integration.test_api.TestPredictionEndpoint object at 0x7f515373f640>
integration_client = <starlette.testclient.TestClient object at 0x7f51536a72b0>

    @pytest.mark.integration
    def test_predict_whitespace_text(self, integration_client):
        """Test prediction with whitespace-only text."""
        response = integration_client.post(
            "/predict",
            json={"text": "   \n\t  "}
        )
    
        # Whitespace-only text should be treated as empty and return an error
>       assert response.status_code == 500
E       assert 503 == 500
E        +  where 503 = <Response [503 Service Unavailable]>.status_code

tests/integration/test_api.py:183: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:17,122 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:17,122 - src.api.inference - INFO - Model not found, using rule-based classification as fallback
2025-10-23 03:15:17,122 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:17,122 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.inference:inference.py:131 Model not found, using rule-based classification as fallback
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:17,124 - src.api.middleware - INFO - Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.124720+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '20', 'content-type': 'application/json'}}
2025-10-23 03:15:17,127 - src.api.middleware - INFO - Response: status=503, duration=0.003s
2025-10-23 03:15:17,128 - httpx - INFO - HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
------------------------------ Captured log call -------------------------------
INFO     src.api.middleware:middleware.py:170 Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.124720+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '20', 'content-type': 'application/json'}}
INFO     src.api.middleware:middleware.py:179 Response: status=503, duration=0.003s
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,136 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
_____________ TestPredictionEndpoint.test_predict_response_schema ______________

self = <tests.integration.test_api.TestPredictionEndpoint object at 0x7f51537ece50>
integration_client = <starlette.testclient.TestClient object at 0x7f5153643670>

    @pytest.mark.integration
    def test_predict_response_schema(self, integration_client):
        """Test that prediction response matches expected schema."""
        response = integration_client.post(
            "/predict",
            json={"text": "What are the symptoms of diabetes?"}
        )
    
>       assert response.status_code == 200
E       assert 503 == 200
E        +  where 503 = <Response [503 Service Unavailable]>.status_code

tests/integration/test_api.py:196: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:17,139 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:17,139 - src.api.inference - INFO - Model not found, using rule-based classification as fallback
2025-10-23 03:15:17,139 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:17,139 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.inference:inference.py:131 Model not found, using rule-based classification as fallback
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:17,141 - src.api.middleware - INFO - Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.141549+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '45', 'content-type': 'application/json'}}
2025-10-23 03:15:17,144 - src.api.middleware - INFO - Response: status=503, duration=0.003s
2025-10-23 03:15:17,146 - httpx - INFO - HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
------------------------------ Captured log call -------------------------------
INFO     src.api.middleware:middleware.py:170 Request: {'method': 'POST', 'path': '/predict', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.141549+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '45', 'content-type': 'application/json'}}
INFO     src.api.middleware:middleware.py:179 Response: status=503, duration=0.003s
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/predict "HTTP/1.1 503 Service Unavailable"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,153 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
__________________ TestCORSHeaders.test_cors_headers_present ___________________

self = <tests.integration.test_api.TestCORSHeaders object at 0x7f515374b3a0>
client = <starlette.testclient.TestClient object at 0x7f51534f30d0>

    @pytest.mark.integration
    def test_cors_headers_present(self, client):
        """Test that CORS headers are present in responses."""
        # Make a request with Origin header to trigger CORS
        response = client.get(
            "/health",
            headers={"Origin": "http://localhost:3001"}
        )
    
        assert response.status_code == 200
    
        # Check for CORS headers
        headers = response.headers
        # CORS headers might be lowercase in test client
        header_keys = [key.lower() for key in headers.keys()]
>       assert any("access-control-allow-origin" in key for key in header_keys)
E       assert False
E        +  where False = any(<generator object TestCORSHeaders.test_cors_headers_present.<locals>.<genexpr> at 0x7f51537edba0>)

tests/integration/test_api.py:281: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:17,178 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:17,179 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:17,179 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:17,181 - src.api.middleware - INFO - Request: {'method': 'GET', 'path': '/health', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.181037+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'origin': 'http://localhost:3001'}}
2025-10-23 03:15:17,182 - src.api.middleware - INFO - Response: status=200, duration=0.002s
2025-10-23 03:15:17,184 - httpx - INFO - HTTP Request: GET http://testserver/health "HTTP/1.1 200 OK"
------------------------------ Captured log call -------------------------------
INFO     src.api.middleware:middleware.py:170 Request: {'method': 'GET', 'path': '/health', 'query_params': '', 'client_ip': 'testclient', 'user_agent': 'testclient', 'timestamp': '2025-10-23T03:15:17.181037+00:00', 'headers': {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'origin': 'http://localhost:3001'}}
INFO     src.api.middleware:middleware.py:179 Response: status=200, duration=0.002s
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/health "HTTP/1.1 200 OK"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,192 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
_____________________ TestCORSHeaders.test_options_request _____________________

self = <tests.integration.test_api.TestCORSHeaders object at 0x7f515374b6d0>
client = <starlette.testclient.TestClient object at 0x7f515363abe0>

    @pytest.mark.integration
    def test_options_request(self, client):
        """Test OPTIONS request for CORS preflight."""
        response = client.options(
            "/predict",
            headers={
                "Origin": "http://localhost:3001",
                "Access-Control-Request-Method": "POST",
                "Access-Control-Request-Headers": "Content-Type"
            }
        )
    
        # Should handle OPTIONS request
>       assert response.status_code in [200, 204]
E       assert 400 in [200, 204]
E        +  where 400 = <Response [400 Bad Request]>.status_code

tests/integration/test_api.py:296: AssertionError
---------------------------- Captured stderr setup -----------------------------
2025-10-23 03:15:17,196 - src.api.main - INFO - Starting Medical Text Classification API...
2025-10-23 03:15:17,196 - src.api.main - INFO - Model loading completed
2025-10-23 03:15:17,197 - src.api.main - WARNING - Failed to start Prometheus server: [Errno 98] Address already in use
------------------------------ Captured log setup ------------------------------
INFO     src.api.main:main.py:60 Starting Medical Text Classification API...
INFO     src.api.main:main.py:66 Model loading completed
WARNING  src.api.main:main.py:76 Failed to start Prometheus server: [Errno 98] Address already in use
----------------------------- Captured stderr call -----------------------------
2025-10-23 03:15:17,199 - httpx - INFO - HTTP Request: OPTIONS http://testserver/predict "HTTP/1.1 400 Bad Request"
------------------------------ Captured log call -------------------------------
INFO     httpx:_client.py:1025 HTTP Request: OPTIONS http://testserver/predict "HTTP/1.1 400 Bad Request"
--------------------------- Captured stderr teardown ---------------------------
2025-10-23 03:15:17,206 - src.api.main - INFO - Shutting down Medical Text Classification API...
---------------------------- Captured log teardown -----------------------------
INFO     src.api.main:main.py:81 Shutting down Medical Text Classification API...
=============================== warnings summary ===============================
tests/integration/test_api.py::TestPredictionEndpoint::test_predict_invalid_json
  /opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_models.py:408: DeprecationWarning: Use 'content=<...>' to upload raw bytes/text content.
    headers, stream = encode_request(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================================ tests coverage ================================
_______________ coverage: platform linux, python 3.9.23-final-0 ________________

Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml
=========================== short test summary info ============================
FAILED tests/integration/test_api.py::TestPredictionEndpoint::test_predict_success - assert 503 == 200
 +  where 503 = <Response [503 Service Unavailable]>.status_code
FAILED tests/integration/test_api.py::TestPredictionEndpoint::test_predict_all_sample_texts - assert 503 == 200
 +  where 503 = <Response [503 Service Unavailable]>.status_code
FAILED tests/integration/test_api.py::TestPredictionEndpoint::test_predict_unicode_text - assert 503 == 200
 +  where 503 = <Response [503 Service Unavailable]>.status_code
FAILED tests/integration/test_api.py::TestPredictionEndpoint::test_predict_whitespace_text - assert 503 == 500
 +  where 503 = <Response [503 Service Unavailable]>.status_code
FAILED tests/integration/test_api.py::TestPredictionEndpoint::test_predict_response_schema - assert 503 == 200
 +  where 503 = <Response [503 Service Unavailable]>.status_code
FAILED tests/integration/test_api.py::TestCORSHeaders::test_cors_headers_present - assert False
 +  where False = any(<generator object TestCORSHeaders.test_cors_headers_present.<locals>.<genexpr> at 0x7f51537edba0>)
FAILED tests/integration/test_api.py::TestCORSHeaders::test_options_request - assert 400 in [200, 204]
 +  where 400 = <Response [400 Bad Request]>.status_code
=================== 7 failed, 10 passed, 1 warning in 1.02s ====================
Error: Process completed with exit code 1.

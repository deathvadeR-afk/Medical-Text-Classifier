groups:
  - name: medical_text_api_alerts
    rules:
      # API Availability Alerts
      - alert: APIDown
        expr: up{job="medical-text-api"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Medical Text API is down"
          description: "The Medical Text Classification API has been down for more than 1 minute."
          
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second over the last 5 minutes."
          
      # Performance Alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 5
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "High API response time"
          description: "95th percentile response time is {{ $value }} seconds."
          
      - alert: HighPredictionLatency
        expr: histogram_quantile(0.95, rate(prediction_duration_seconds_bucket[5m])) > 3
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High ML prediction latency"
          description: "95th percentile prediction time is {{ $value }} seconds."
          
      # Resource Usage Alerts
      - alert: HighRequestVolume
        expr: rate(http_requests_total[5m]) > 100
        for: 5m
        labels:
          severity: info
        annotations:
          summary: "High request volume"
          description: "Request rate is {{ $value }} requests per second."
          
      # Model Performance Alerts
      - alert: ModelNotLoaded
        expr: model_loaded == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "ML Model not loaded"
          description: "The BiomedBERT model is not loaded and predictions will fail."
          
  - name: infrastructure_alerts
    rules:
      # Database Alerts
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "PostgreSQL database is down"
          description: "PostgreSQL database has been down for more than 2 minutes."
          
      # Storage Alerts
      - alert: MinIODown
        expr: up{job="minio"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "MinIO storage is down"
          description: "MinIO object storage has been down for more than 2 minutes."
          
      # Prometheus Self-Monitoring
      - alert: PrometheusConfigReloadFailed
        expr: prometheus_config_last_reload_successful == 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Prometheus configuration reload failed"
          description: "Prometheus configuration reload has been failing for 5 minutes."
